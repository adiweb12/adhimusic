name: Build MusicPlayer APK

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3️⃣ Set up Gradle
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.5

      # 4️⃣ Generate Android project structure
      - name: Generate Android project
        run: |
          mkdir -p app/src/main/java/com/example/musicplayer
          mkdir -p app/src/main/res/layout
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/res/raw

          # Add a placeholder audio file to prevent build errors
          echo "This is a placeholder audio file." > app/src/main/res/raw/sample_song.mp3

          # MainActivity.kt
          cat <<EOF > app/src/main/java/com/example/musicplayer/MainActivity.kt
                package com.example.musicplayer

                import android.content.Intent
                import android.os.Bundle
                import androidx.appcompat.app.AppCompatActivity
                import androidx.recyclerview.widget.LinearLayoutManager
                import androidx.recyclerview.widget.RecyclerView
                
                class MainActivity : AppCompatActivity() {
                  private lateinit var recyclerView: RecyclerView

                  override fun onCreate(savedInstanceState: Bundle?) {
                    super.onCreate(savedInstanceState)
                    setContentView(R.layout.activity_main)

                    recyclerView = findViewById(R.id.recyclerView)
                    recyclerView.layoutManager = LinearLayoutManager(this)

                    val songs = listOf("Song 1", "Song 2", "Song 3")
                    recyclerView.adapter = MusicAdapter(songs) { song ->
                      val intent = Intent(this, PlayerService::class.java).apply {
                        action = "PLAY"
                        putExtra("SONG_NAME", song)
                      }
                      startService(intent)
                    }
                  }
                }
                EOF
  
          # MusicAdapter.kt
          cat <<EOF > app/src/main/java/com/example/musicplayer/MusicAdapter.kt
                package com.example.musicplayer

                import android.view.LayoutInflater
                import android.view.View
                import android.view.ViewGroup
                import android.widget.TextView
                import androidx.recyclerview.widget.RecyclerView
                class MusicAdapter(
                  private val songs: List<String>,
                  private val onClick: (String) -> Unit
                ) : RecyclerView.Adapter<MusicAdapter.MusicViewHolder>() {

                class MusicViewHolder(view: View) : RecyclerView.ViewHolder(view) {
                  val title: TextView = view.findViewById(R.id.textTitle)
                  val artist: TextView = view.findViewById(R.id.textArtist)
                }
  
                override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MusicViewHolder {
                  val view = LayoutInflater.from(parent.context).inflate(R.layout.item_music, parent, false)
                  return MusicViewHolder(view)
                }

                override fun onBindViewHolder(holder: MusicViewHolder, position: Int) {
                  val song = songs[position]
                  holder.title.text = song
                  holder.artist.text = "Unknown Artist"
                  holder.itemView.setOnClickListener { onClick(song) }
                }

                override fun getItemCount(): Int = songs.size
                }
                EOF

          # PlayerService.kt
          cat <<EOF > app/src/main/java/com/example/musicplayer/PlayerService.kt
                package com.example.musicplayer

                import android.app.Service
                import android.content.Intent
                import android.media.MediaPlayer
                import android.os.IBinder

                class PlayerService : Service() {
                  private var mediaPlayer: MediaPlayer? = null

                  override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
                    val song = intent?.getStringExtra("SONG_NAME") ?: "Unknown"
                    if (intent?.action == "PLAY") {
                      mediaPlayer?.stop()
                      mediaPlayer?.release()
                      mediaPlayer = MediaPlayer.create(this, R.raw.sample_song) 
                      mediaPlayer?.start()
                    } 
                    return START_STICKY
                  }

                  override fun onDestroy() {
                    mediaPlayer?.release()
                    mediaPlayer = null
                    super.onDestroy()
                  }

                  override fun onBind(intent: Intent?): IBinder? = null
                }
                EOF

          # AndroidManifest.xml
          cat <<EOF > app/src/main/AndroidManifest.xml
                <manifest xmlns:android="http://schemas.android.com/apk/res/android">
                  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
                  <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>

                  <application
                    android:allowBackup="true"
                    android:label="MusicPlayer"
                    android:supportsRtl="true"
                    android:theme="@style/Theme.MusicPlayer">

                    <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                        <action android:name="android.intent.action.MAIN"/>
                        <category android:name="android.intent.category.LAUNCHER"/>
                      </intent-filter>
                    </activity>

                    <service
                      android:name=".PlayerService"
                      android:foregroundServiceType="mediaPlayback"/>
                  </application>
                </manifest>
                EOF

          # Layouts
          cat <<EOF > app/src/main/res/layout/activity_main.xml
                    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
                      android:layout_width="match_parent"
                      android:layout_height="match_parent"
                      android:orientation="vertical">

                      <androidx.recyclerview.widget.RecyclerView
                        android:id="@+id/recyclerView"
                        android:layout_width="match_parent"
                        android:layout_height="match_parent"/>
                    </LinearLayout>
                    EOF

          cat <<EOF > app/src/main/res/layout/item_music.xml
                  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    android:padding="12dp">

                      <TextView
                        android:id="@+id/textTitle"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="Song Title"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:textColor="@android:color/white"/>

                      <TextView
                        android:id="@+id/textArtist"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="Artist"
                        android:textSize="14sp"
                        android:textColor="#AAAAAA"/>
                  </LinearLayout>
                  EOF

          # Values
          cat <<EOF > app/src/main/res/values/strings.xml
                    <resources>
                      <string name="app_name">MusicPlayer</string>
                    </resources>
                    EOF

          cat <<EOF > app/src/main/res/values/colors.xml
                    <resources>
                      <color name="black">#000000</color>
                      <color name="white">#FFFFFF</color>
                    </resources>
                    EOF

          cat <<EOF > app/src/main/res/values/themes.xml
                    <resources xmlns:tools="http://schemas.android.com/tools">
                      <style name="Theme.MusicPlayer" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
                        <item name="colorPrimary">@color/black</item>
                        <item name="colorOnPrimary">@color/white</item>
                      </style>
                    </resources>
                    EOF

          # Gradle settings
          cat <<EOF > settings.gradle
                    rootProject.name = "MusicPlayer"
                    include ':app'
                    EOF

          cat <<EOF > gradle.properties
                    android.useAndroidX=true
                    android.enableJetifier=true
                    EOF

          # Root build.gradle
          cat <<EOF > build.gradle
                    buildscript {
                      repositories { google(); mavenCentral() }
                      dependencies {
                        classpath "com.android.tools.build:gradle:8.5.0"
                        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.2.0"
                      }
                    }
                    allprojects { repositories { google(); mavenCentral() } }
                    EOF

          # App build.gradle
          cat <<EOF > app/build.gradle
                    apply plugin: 'com.android.application'
                    apply plugin: 'kotlin-android'

                    android {
                      namespace "com.example.musicplayer"
                      compileSdk 34

                      defaultConfig {
                        applicationId "com.example.musicplayer"
                        minSdk 24
                        targetSdk 34
                        versionCode 1
                        versionName "1.0"
                      }

                      buildTypes {
                        release {
                          minifyEnabled false
                          proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                        }
                      }
                    }

                    repositories {
                      google()
                      mavenCentral()
                    }

                    dependencies {
                      implementation "org.jetbrains.kotlin:kotlin-stdlib:2.2.0"
                      implementation "androidx.core:core-ktx:1.13.1"
                      implementation "androidx.appcompat:appcompat:1.7.0"
                      implementation "com.google.android.material:material:1.12.0"
                      implementation "androidx.recyclerview:recyclerview:1.3.2"
                      implementation "androidx.media3:media3-exoplayer:1.4.1"
                      implementation "androidx.media3:media3-session:1.4.1"
                      implementation "androidx.activity:activity-ktx:1.9.2"
                    }
                    EOF

      # 5️⃣ Build APK
      - name: Build APK
        run: gradle assembleDebug
        working-directory: .

      # 6️⃣ Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: MusicPlayer-APK
          path: app/build/outputs/apk/debug/app-debug.apk
